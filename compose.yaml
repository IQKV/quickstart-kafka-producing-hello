# This configuration is intended for development purposes
name: dev-quickstart-kafka-producing-hello
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.2
    container_name: dev-quickstart-kafka-producing-hello-zookeeper
    restart: no
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
  kafka:
    image: confluentinc/cp-kafka:7.8.2
    container_name: dev-quickstart-kafka-producing-hello-broker
    restart: no
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  prometheus:
    container_name: dev-quickstart-kafka-producing-hello-prometheus
    image: prom/prometheus:v3.1.0
    volumes:
      - ./src/main/docker/prometheus/:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    # On MacOS, remove next line and replace localhost by host.docker.internal in src/main/docker/prometheus/prometheus.yml and
    # docker/grafana/provisioning/datasources/datasource.yml
    network_mode: "host" # to test locally running service
  grafana:
    container_name: dev-quickstart-kafka-producing-hello-grafana
    image: grafana/grafana:11.4.0
    volumes:
      - ./src/main/docker/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=changeme
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    # On MacOS, remove next line and replace localhost by host.docker.internal in src/main/docker/prometheus/prometheus.yml and
    # docker/grafana/provisioning/datasources/datasource.yml
    network_mode: "host" # to test locally running service
  sonar:
    container_name: dev-quickstart-kafka-producing-hello-sonarqube
    image: sonarqube:25.3.0.104237-community
    # Forced authentication redirect for UI is turned off for out of the box experience while trying out SonarQube
    # For real use cases delete SONAR_FORCEAUTHENTICATION variable or set SONAR_FORCEAUTHENTICATION=true
    environment:
      - SONAR_FORCEAUTHENTICATION=false
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:9001:9000
      - 127.0.0.1:9000:9000
